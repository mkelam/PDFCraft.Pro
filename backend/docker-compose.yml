version: '3.8'

services:
  # Main API application
  pdfcraft-api:
    build: .
    container_name: pdfcraft-api
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_HOST=mysql
      - DB_NAME=pdfcraft_db
      - DB_USER=pdfcraft
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=${JWT_SECRET}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - LIBREOFFICE_AVAILABLE=true
    volumes:
      - ./uploads:/app/uploads
      - ./temp:/app/temp
      - ./logs:/app/logs
    depends_on:
      - mysql
      - redis
    restart: unless-stopped
    networks:
      - pdfcraft-network

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: pdfcraft-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=pdfcraft_db
      - MYSQL_USER=pdfcraft
      - MYSQL_PASSWORD=${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    restart: unless-stopped
    networks:
      - pdfcraft-network
    command: --default-authentication-plugin=mysql_native_password

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: pdfcraft-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - pdfcraft-network
    command: redis-server --appendonly yes

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: pdfcraft-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - pdfcraft-api
    restart: unless-stopped
    networks:
      - pdfcraft-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  pdfcraft-network:
    driver: bridge